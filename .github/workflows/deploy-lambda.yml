name: Deploy Lambda

on:
  push:
    branches: [ main ]
    paths:
      - 'src/lambda/**'
      - 'requirements.txt'
      - 'src/lambda/requirements.txt'
      - 'terraform/**'
  workflow_dispatch:

permissions:
  id-token: write
  contents: read
  issues: write

jobs:
  drift-check:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./terraform

    steps:
    - uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: '1.7.0'

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1
        role-duration-seconds: 1200
        role-skip-session-tagging: true
        mask-aws-account-id: true

    - name: Create tfvars file
      shell: bash
      run: |
        cat << 'EOF' > terraform.tfvars
        ${{ secrets.TERRAFORM_TFVARS }}
        EOF

    - name: Verify tfvars (safely)
      run: |
        echo "Checking if tfvars file exists..."
        if [ -f terraform.tfvars ]; then
          echo "✅ terraform.tfvars file exists"
          echo "Number of variables defined: $(grep -c "=" terraform.tfvars)"
          echo "Variable names defined:"
          grep -o '^[^=]*' terraform.tfvars | sed 's/^/- /'
        else
          echo "❌ terraform.tfvars file not found"
          exit 1
        fi

    - name: Setup Terraform Plugin Cache
      run: |
        mkdir -p ~/.terraform.d/plugin-cache
        echo 'plugin_cache_dir = "$HOME/.terraform.d/plugin-cache"' > ~/.terraformrc

    - name: Cache Terraform
      uses: actions/cache@v4
      with:
        path: |
          ~/.terraform.d/plugin-cache
          .terraform
        key: ${{ runner.os }}-terraform-${{ hashFiles('**/.terraform.lock.hcl') }}
        restore-keys: |
          ${{ runner.os }}-terraform-

    - name: Check for Configuration Drift
      run: |
        terraform init
        terraform validate
        
        terraform plan --refresh-only -detailed-exitcode -lock=false -var-file="terraform.tfvars"
        if [ $? -eq 2 ]; then
          echo "❌ Configuration drift detected! Please fix before deploying."
          exit 1
        fi

  deploy:
    needs: drift-check
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.12'

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1
        role-duration-seconds: 1200
        role-skip-session-tagging: true
        mask-aws-account-id: true

    - name: Install dependencies
      run: |
        pip install -r requirements.txt --target ./src/lambda
        cd src/lambda
        rm -rf *.dist-info __pycache__

    - name: Create deployment package
      run: |
        cd src/lambda
        zip -r ../../terraform/lambda_function.zip ./*

    - name: Update Lambda function
      run: |
        aws lambda update-function-code \
          --function-name trading-prod-function \
          --zip-file fileb://terraform/lambda_function.zip